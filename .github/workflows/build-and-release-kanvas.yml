name: Build and Release Kanvas
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version of Meshery (e.g. v0.0.0)"
        required: false
      revision:
        description: "Revision of Extension (e.g. 1)"
        required: false
      branch:
        description: Branch of `meshery-extensions` repository to deploy.
        required: false
        default: master

jobs:
  release-kanvas:
    name: Build and Rollout Kanvas
    runs-on: "ubuntu-latest"
    steps:

      - name: Checkout meshery/meshery
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: "meshery"
          repository: meshery/meshery
          ref: master
          
      - name: Checkout meshery-extensions 
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          repository: layer5labs/meshery-extensions
          path: "meshery-extensions"
          fetch-depth: 1
          ref: ${{ inputs.branch }}
      
      - name: Checkout meshery-cloud 
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          repository: layer5io/meshery-cloud
          path: "meshery-cloud"
          fetch-depth: 1
          ref: master

      - name: Get latest version for meshery and revision for meshery-extensions
        working-directory: "meshery-extensions"
        id: latest_version
        run: |
          export $(make -f Makefile meshery_version)
          export $(make -f Makefile extension_version)
          LATEST_RELEASE=$EXTENSION_VERSION
          echo "MESHERY_VERSION=$MESHERY_VERSION"
          echo "LATEST_RELEASE=$LATEST_RELEASE"
          
          BASE_LATEST_RELEASE=$(echo $LATEST_RELEASE | sed -E 's/-([0-9]+)$//')
          EXTENSION_VERSION=$(echo $LATEST_RELEASE | sed -E 's/^.*-([0-9]+)$/\1/')
          
          if [[ $MESHERY_VERSION == $BASE_LATEST_RELEASE ]]; then
            EXTENSION_VERSION=$((EXTENSION_VERSION+1))
          else
            EXTENSION_VERSION="1"
          fi
          echo "MESHERY_VERSION=$MESHERY_VERSION" >> $GITHUB_ENV
          echo "EXTENSION_VERSION=$EXTENSION_VERSION" >> $GITHUB_ENV
          echo "VERSION=$MESHERY_VERSION-$EXTENSION_VERSION" >> $GITHUB_ENV
          
      - name: Override version and revision, if provided
        if:  ${{ inputs.version }} 
        run: |
          echo Using manually dispatch values of ${{ inputs.version }} and ${{ inputs.revision }}
          echo "MESHERY_VERSION=${{ inputs.version }}" >> $GITHUB_ENV
          echo "EXTENSION_VERSION=${{ inputs.revision }}" >> $GITHUB_ENV
          echo "VERSION=${{ inputs.version }}-${{ inputs.revision }}" >> $GITHUB_ENV
        
      - name: Setup Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Setup Node 16
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Build extension
        working-directory: ./meshery-extensions
        run: |
          export PROVIDER_PATH="provider/navigator";
          make kanvas-prod;

          tar -zcf provider-meshery.tar.gz /home/runner/.meshery/provider;
          tree /home/runner/.meshery/provider;
      
      - name: publish stable release on meshery-extensions-packages from tag
        uses: ncipollo/release-action@v1
        with:
          repo: meshery-extensions-packages
          token: ${{ secrets.RELEASEDRAFTER_PAT }}
          tag: ${{ env.EXTENSION_VERSION }}
          name: Meshery Extensions ${{ env.LATEST_EXTENSION_VERSION }}
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: ${{ github.workspace }}/meshery-extensions/provider-meshery.tar.gz
          omitNameDuringUpdate: true
          replacesArtifacts: true

      - name: publish stable release on meshery-extensions from tag
        uses: ncipollo/release-action@v1
        with:
          repo: meshery-extensions
          token: ${{ secrets.RELEASEDRAFTER_PAT }}
          tag: ${{ env.VERSION }}
          name: Meshery Extensions ${{ env.VERSION }}
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: ${{ github.workspace }}/meshery-extensions/provider-meshery.tar.gz
          omitNameDuringUpdate: true
          replacesArtifacts: true          

      # - name: Send Email on Extensions Release Failure
      #   if: ${{ failure() }}
      #   uses: dawidd6/action-send-mail@v3.7.1
      #   env:
      #     msg: ${{ env.reason != '' && env.reason || ' Workflow Build Failure' }}
      #   with:
      #     server_address: smtp.gmail.com
      #     server_port: 465
      #     username: ${{ secrets.MAIL_USERNAME }}
      #     password: ${{ secrets.MAIL_PASSWORD }}
      #     subject: GitHub Actions - Extensions Release Failure
      #     from: |
      #       "Meshery Extensions" <no-reply@meshery.io>
      #     to: |
      #       "Layer5 Support" <support@layer5.io>
      #     html_body: |
      #       <b>REPO:</b> ${{ github.repository }}<br />  
      #       <b>WORKFLOW:</b> ${{ github.workflow }}<br />
      #       <b>JOB:</b> ${{ github.job }}<br />
      #       <b>REASON:</b> ${{ env.msg }}<br />
      #       <b>DETAILS:</b> <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}${{ job.status }}">${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}</a><br />

